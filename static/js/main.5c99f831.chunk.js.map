{"version":3,"sources":["Utils/countDownUtils.js","Timer/Timer.jsx","Countdown/CountdownButtons.jsx","Countdown/CountdownResults.jsx","Countdown/Countdown.jsx","index.jsx"],"names":["getMinutes","milliseconds","min","Math","floor","getSeconds","sec","generatePercent","disableControl","value","result","generateSliderValue","minutes","seconds","sliderValue","Timer","state","textButton","active","setStateTimer","setState","startTimer","timerId","setTimer","setTimeout","clearTimeout","resetTimer","this","className","millisec","getMilliseconds","onClick","type","shape","style","minWidth","icon","size","ghost","React","Component","CountdownButtons","block","CountdownResults","props","setPropsToState","beep","activeSound","snd","Audio","play","setStateDisabled","propMilliseconds","changeActiveSound","stateButton","prevProps","strokeColor","strokeWidth","percent","status","Countdown","maxMinValue","maxSecValue","stepSlider","setMinutes","target","replace","setSeconds","handleSliderChange","formatSliderValue","parseFloat","disableInput","onChange","disabled","maxLength","toString","length","defaultValue","tipFormatter","step","max","TabPane","Tabs","ReactDOM","render","defaultActiveKey","margin","tab","key","document","getElementById"],"mappings":"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","file":"static/js/main.5c99f831.chunk.js","sourcesContent":["const getMinutes = (milliseconds) => {\n  const min = Math.floor(Math.floor(milliseconds / 1000) / 60);\n  return min < 10 ? `0${min}` : min;\n};\nconst getSeconds = (milliseconds) => {\n  const min = Math.floor(Math.floor(milliseconds / 1000) / 60);\n  const sec = Math.floor(milliseconds / 1000) - min * 60;\n  return sec < 10 ? `0${sec}` : sec;\n};\nconst getMilliseconds = (milliseconds) => {\n  const min = Math.floor(Math.floor(milliseconds / 1000) / 60);\n  const sec = Math.floor(milliseconds / 1000) - min * 60;\n  const millisec = Math.floor((milliseconds - sec * 1000 - min * 60 * 1000) / 10);\n  return millisec < 10 ? `0${millisec}` : millisec;\n};\nconst generatePercent = (milliseconds, disableControl, value) => {\n  const result = milliseconds <= 0 ? 0 : Math.floor(100 - (milliseconds * 100) / value);\n  return disableControl ? result : 0;\n};\nconst generateSliderValue = (minutes, seconds) => {\n  const sliderValue = minutes * 60 + seconds;\n  return sliderValue > 3600 ? 3600 : sliderValue;\n};\nexport { getMinutes, getSeconds, getMilliseconds, generatePercent, generateSliderValue };\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport './Timer.scss';\nimport { Button } from 'antd';\nimport { getMinutes, getSeconds, getMilliseconds } from '../Utils/countDownUtils';\n\nexport default class Timer extends React.Component {\n  state = {\n    textButton: 'Запустить',\n    milliseconds: 0,\n    active: false,\n  };\n\n  setStateTimer = () => {\n    this.setState(({ milliseconds }) => {\n      return {\n        milliseconds: milliseconds + 25,\n      };\n    });\n  };\n\n  startTimer = () => {\n    const { milliseconds } = this.state;\n    let timerId;\n    const setTimer = () => {\n      timerId = setTimeout(() => {\n        const { active } = this.state;\n        if (active) {\n          setTimer();\n          this.setStateTimer();\n        }\n        if (!active || milliseconds === 3600000) {\n          clearTimeout(timerId);\n        }\n      }, 25);\n    };\n    this.setState(\n      ({ active }) => ({\n        textButton: active ? 'Запустить' : 'Пауза',\n        active: !active,\n      }),\n      () => {\n        setTimer();\n      }\n    );\n  };\n\n  resetTimer = () => {\n    this.setState({\n      milliseconds: 0,\n      active: false,\n    });\n  };\n\n  render() {\n    const { milliseconds, textButton } = this.state;\n    return (\n      <div className=\"tab-timer\">\n        <div className=\"tab-timer__timer\">\n          {`${getMinutes(milliseconds)} : ${getSeconds(milliseconds)} : \n          ${getMilliseconds(milliseconds)}`}\n        </div>\n        <div className=\"tab-timer__wrap-buttons\">\n          <Button\n            className=\"tab-timer__start-button\"\n            onClick={this.startTimer}\n            type=\"primary\"\n            shape=\"round\"\n            style={{ minWidth: '120px' }}\n            icon={textButton}\n            size=\"large\"\n          />\n          <Button\n            ghost\n            className=\"tab-timer__reset-button\"\n            onClick={this.resetTimer}\n            type=\"primary\"\n            shape=\"round\"\n            icon=\"Сбросить\"\n            size=\"large\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CountdownButtons.scss';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst CountdownButtons = ({ startTimer, resetTimer, textButton }) => (\n  <div className=\"tab-countdown__wrap-buttons\">\n    <Button\n      block\n      className=\"tab-countdown__start-button\"\n      onClick={startTimer}\n      type=\"primary\"\n      shape=\"round\"\n      style={{ minWidth: '120px' }}\n      icon={textButton}\n      size=\"large\"\n    />\n    <Button\n      ghost\n      className=\"tab-countdown__reset-button\"\n      onClick={resetTimer}\n      type=\"primary\"\n      shape=\"round\"\n      icon=\"Сбросить\"\n      size=\"large\"\n    />\n  </div>\n);\n\nCountdownButtons.propTypes = {\n  textButton: PropTypes.string.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  resetTimer: PropTypes.func.isRequired,\n};\nexport default CountdownButtons;\n","import React from 'react';\nimport './CountdownResults.scss';\nimport { Progress } from 'antd';\nimport PropTypes from 'prop-types';\nimport CountdownButtons from './CountdownButtons';\nimport { getMinutes, getSeconds, generatePercent } from '../Utils/countDownUtils';\n\nexport default class CountdownResults extends React.Component {\n  constructor(props) {\n    super(props);\n    const { active } = this.props;\n    this.state = {\n      milliseconds: 0,\n      active,\n      value: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { propMilliseconds, active } = this.props;\n    if (prevProps.propMilliseconds !== propMilliseconds) {\n      this.setPropsToState(propMilliseconds, active);\n    }\n  }\n\n  setPropsToState = (milliseconds, active) => {\n    this.setState({\n      milliseconds,\n      active,\n    });\n  };\n\n  setStateTimer = () => {\n    this.setState(({ milliseconds }) => {\n      return {\n        milliseconds: milliseconds - 25,\n      };\n    });\n  };\n\n  beep = () => {\n    const { activeSound } = this.props;\n    const snd = new Audio(\n      'data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU='\n    );\n    return activeSound ? snd.play() : null;\n  };\n\n  startTimer = () => {\n    const { setStateDisabled, propMilliseconds, resetTimer, changeActiveSound } = this.props;\n    this.setState({\n      value: propMilliseconds,\n    });\n    changeActiveSound(true);\n    const setTimer = () => {\n      const { active } = this.state;\n      const timerId = setTimeout(() => {\n        const { milliseconds } = this.state;\n        if (milliseconds > 0 && active) {\n          this.setStateTimer();\n          setTimer();\n        } else if (milliseconds <= 0) {\n          this.beep();\n          resetTimer();\n          setStateDisabled(false);\n          clearTimeout(timerId);\n        }\n      }, 25);\n    };\n    this.setState(\n      ({ active }) => {\n        return {\n          active: !active,\n        };\n      },\n      () => {\n        if (propMilliseconds !== 0) {\n          setTimer();\n          setStateDisabled(true);\n        }\n      }\n    );\n  };\n\n  stateButton = (active, milliseconds) => {\n    if (!active || milliseconds <= 0) {\n      return 'Запустить';\n    }\n    return 'Пауза';\n  };\n\n  render() {\n    const { value, milliseconds, active } = this.state;\n    const { resetTimer, disableControl } = this.props;\n    return (\n      <div className=\"tab-countdown__result\">\n        <div className=\"tab-countdown__timer\">\n          {`${getMinutes(milliseconds)} : ${getSeconds(milliseconds)}`}\n        </div>\n        <Progress\n          strokeColor=\"#00FFFF\"\n          strokeWidth={20}\n          percent={generatePercent(milliseconds, disableControl, value)}\n          status=\"active\"\n        />\n        <CountdownButtons\n          textButton={this.stateButton(milliseconds, active)}\n          startTimer={this.startTimer}\n          resetTimer={resetTimer}\n        />\n      </div>\n    );\n  }\n}\n\nCountdownResults.propTypes = {\n  changeActiveSound: PropTypes.func.isRequired,\n  activeSound: PropTypes.bool.isRequired,\n  disableControl: PropTypes.bool.isRequired,\n  resetTimer: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired,\n  propMilliseconds: PropTypes.number.isRequired,\n  setStateDisabled: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Slider } from 'antd';\nimport CountdownResults from './CountdownResults';\nimport { generateSliderValue } from '../Utils/countDownUtils';\n\nexport default class Countdown extends React.Component {\n  state = {\n    minutes: 0,\n    seconds: 0,\n    active: false,\n    disableControl: false,\n    maxMinValue: 720,\n    maxSecValue: 59,\n    stepSlider: 15,\n    activeSound: true,\n  };\n\n  setMinutes = ({ target: { value } }) => {\n    this.setState(({ maxMinValue }) => ({\n      minutes: value > maxMinValue ? maxMinValue : value.replace(/\\D/g, ''),\n    }));\n  };\n\n  setSeconds = ({ target: { value } }) => {\n    this.setState(({ maxSecValue }) => ({\n      seconds: value > maxSecValue ? maxSecValue : value.replace(/\\D/g, ''),\n    }));\n  };\n\n  handleSliderChange = (value) => {\n    this.setState(\n      ({ seconds, stepSlider }) => {\n        if (seconds <= 45) {\n          return {\n            minutes: Math.floor(value / 60),\n            seconds: value % stepSlider === 0 ? value : seconds,\n          };\n        }\n        return null;\n      },\n      () => {\n        this.setState(({ seconds, minutes }) => {\n          if (seconds > 45) {\n            return {\n              seconds: value - minutes * 60,\n            };\n          }\n          return null;\n        });\n      }\n    );\n  };\n\n  resetTimer = () => {\n    this.setState({\n      activeSound: false,\n      minutes: 0,\n      seconds: 0,\n      active: false,\n      disableControl: false,\n    });\n  };\n\n  setStateDisabled = (state) => {\n    this.setState({\n      disableControl: state,\n    });\n  };\n\n  formatSliderValue = () => {\n    const { minutes, seconds } = this.state;\n    const sliderValue = `${parseFloat(minutes)} : ${\n      parseFloat(seconds) < 10 ? `0${parseFloat(seconds)}` : parseFloat(seconds)\n    }`;\n    return sliderValue;\n  };\n\n  changeActiveSound = (value) => {\n    this.setState({ activeSound: value });\n  };\n\n  render() {\n    const {\n      minutes,\n      seconds,\n      active,\n      disableControl,\n      maxSecValue,\n      maxMinValue,\n      activeSound,\n    } = this.state;\n    const disableInput = disableControl ? 'tab-countdown__input-disabled' : null;\n    return (\n      <div className=\"tab-countdown\">\n        <form>\n          <div className=\"tab-countdown_wrap-input-min\">\n            <span className=\"tab-countdown__text-label\">{`Введите минуты (max: ${maxMinValue}):`}</span>\n            <input\n              className={`tab-countdown__input ${disableInput}`}\n              onChange={this.setMinutes}\n              disabled={disableControl}\n              maxLength={maxMinValue.toString().length}\n              value={minutes}\n            />\n          </div>\n          <div className=\"tab-countdown_wrap-input-sec\">\n            <span className=\"tab-countdown__text-label\">{`Введите секунды (max: ${maxSecValue}):`}</span>\n            <input\n              className={`tab-countdown__input ${disableInput}`}\n              onChange={this.setSeconds}\n              disabled={disableControl}\n              maxLength={maxSecValue.toString().length}\n              value={seconds}\n            />\n          </div>\n        </form>\n        <div className=\"tab-countdown__slider\">\n          Шаг установки ползунка 15сек (max: 60 минут).\n          <Slider\n            onChange={this.handleSliderChange}\n            disabled={disableControl}\n            defaultValue={0}\n            value={generateSliderValue(minutes, seconds)}\n            tipFormatter={this.formatSliderValue}\n            step={15}\n            max={3600}\n          />\n        </div>\n        <CountdownResults\n          changeActiveSound={this.changeActiveSound}\n          activeSound={activeSound}\n          disableControl={disableControl}\n          resetTimer={this.resetTimer}\n          setStateDisabled={this.setStateDisabled}\n          active={active}\n          propMilliseconds={seconds * 1000 + minutes * 60 * 1000}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Tabs } from 'antd';\nimport Timer from './Timer/Timer';\nimport 'antd/dist/antd.css';\nimport Countdown from './Countdown/Countdown';\n\nconst { TabPane } = Tabs;\n\nfunction callback() {\n  // console.log(key);\n}\n\nReactDOM.render(\n  <Tabs\n    defaultActiveKey=\"1\"\n    type=\"card\"\n    size=\"large\"\n    onChange={callback}\n    style={{ margin: '100px 300px', minWidth: '700px' }}\n  >\n    <TabPane tab=\"Timer\" key=\"1\">\n      <Timer />\n    </TabPane>\n    <TabPane tab=\"Countdown\" key=\"2\">\n      <Countdown />\n    </TabPane>\n  </Tabs>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}